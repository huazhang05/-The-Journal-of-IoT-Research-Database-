/*Team Project
Team member: Wei Zhu,Leifu,Jianwen Wu, Hua Zhang*/

CREATE TABLE SCHOLARS
(SCH_ID INT,
 SCH_EMAIL VARCHAR (50) NOT NULL UNIQUE,
 SCH_NAME VARCHAR (30) NOT NULL,
 SCH_ADRESS VARCHAR (255) NOT NULL,
 SCH_AFFILATION VARCHAR (255) NOT NULL,
 PRIMARY KEY (SCH_ID));

CREATE TABLE PAPER
(PAPER_CODE VARCHAR (50),
PAPER_TITLE VARCHAR (50) NOT NULL,
REC_DATE DATE DEFAULT GETDATE() NOT NULL,
PAPER_STATUS VARCHAR (20) NOT NULL,
PAPER_FEEDBACK NUMERIC DEFAULT 0,
ACCEPTED_DATE DATE,
PRIMARY KEY (PAPER_CODE),
CONSTRAINT P_FB CHECK (PAPER_FEEDBACK <= 100 AND PAPER_FEEDBACK >= 0));
 
 CREATE TABLE CREDIT
(P_CODE VARCHAR (50),
S_ID INT,
CREDITS INT NOT NULL DEFAULT 100, --
PRIMARY KEY (P_CODE,S_ID),
FOREIGN KEY (P_CODE) REFERENCES PAPER(PAPER_CODE),
FOREIGN KEY (S_ID) REFERENCES SCHOLARS(SCH_ID)
ON DELETE CASCADE);
	
CREATE TABLE REVIEWER
(REVR_ID VARCHAR (10) PRIMARY KEY,
REVR_NAME VARCHAR (20) NOT NULL,
REVR_ADDRESS VARCHAR (255) NOT NULL,
REVR_EMAIL VARCHAR (50) NOT NULL,
REVR_AFFILATION VARCHAR (255) NOT NULL);
	 
CREATE TABLE RATING
(PAPER_CODE VARCHAR (50),
REVR_ID VARCHAR (10),
APPROPRIATENESS INT DEFAULT 0,
CLARITY INT DEFAULT 0,
METHODOLOGY INT DEFAULT 0,
CONTRIBUTION INT DEFAULT 0,
TOTAL_RATING NUMERIC DEFAULT 0,
RECOMMENDATION  VARCHAR (30),
RATING_DATE DATE,
PRIMARY KEY (PAPER_CODE,REVR_ID),
FOREIGN KEY (PAPER_CODE) REFERENCES PAPER(PAPER_CODE)
ON DELETE CASCADE,
FOREIGN KEY (REVR_ID) REFERENCES REVIEWER(REVR_ID));
		
CREATE TABLE AREA_OF_INTETEST
(IS_CODE VARCHAR (10) PRIMARY KEY,
IS_DESCRIPTION VARCHAR (255));
		 
CREATE TABLE REVIEWER_OF_INTERESTS
(IS_CODE VARCHAR (10),
REVR_ID VARCHAR (10),
PRIMARY KEY (IS_CODE, REVR_ID),
FOREIGN KEY (IS_CODE) REFERENCES AREA_OF_INTETEST(IS_CODE)
ON DELETE CASCADE,
FOREIGN KEY (REVR_ID) REFERENCES REVIEWER(REVR_ID)
ON DELETE CASCADE);

--	ADD SCHOLARS ROWS
		 INSERT INTO SCHOLARS VALUES (1,'Ramas@Bryson.com','Ramas','Bryson, Inc.','ABC');
		 INSERT INTO SCHOLARS VALUES (2,'wei@vanier.com','wei','wei, Inc.','WWW');
		 INSERT INTO SCHOLARS VALUES (3,'hua@vanier.com','hua','hua, Inc.','HHH');
		 INSERT INTO SCHOLARS VALUES (4,'lei@vanier.com','lei','lei, Inc.','LLL');
		 INSERT INTO SCHOLARS VALUES (5,'jianwen@vanier.com','jianwen','jianwen, Inc.','JJJ');
--  ADD PAPER ROWS
		 INSERT INTO PAPER VALUES ('P01','Does time exist?','16-JAN-2012','received',3,null);
		 INSERT INTO PAPER VALUES ('P02','Does space exist?','16-AUG-2014','pending',2,null);
		 INSERT INTO PAPER VALUES ('P03','introduction to quantum mechanics','16-SEP-2013','appoval',1,null);
--  ADD CREDIT ROWS
		 INSERT INTO CREDIT VALUES ('P01',1,100);
		 INSERT INTO CREDIT VALUES ('P02',2,40);
		 INSERT INTO CREDIT VALUES ('P02',3,60);
		 INSERT INTO CREDIT VALUES ('P03',3,40);
		 INSERT INTO CREDIT VALUES ('P03',4,30);
		 INSERT INTO CREDIT VALUES ('P03',5,30);
--  ADD REVIEWER ROWS
		 INSERT INTO REVIEWER VALUES (10001,'Alfred','SuperLoo, Inc','Alfred@SuperLoo.com','DEF');
		 INSERT INTO REVIEWER VALUES (10002,'Zhu','Zhu, Inc','zhu@SuperLoo.com','ZZZ');
		 INSERT INTO REVIEWER VALUES (10003,'Zhang','Zhang, Inc','zhang@SuperLoo.com','ZHZHZH');
		 INSERT INTO REVIEWER VALUES (10004,'Fu','Fu, Inc','Fu@SuperLoo.com','FFF');
		 INSERT INTO REVIEWER VALUES (10005,'Wu','Wu, Inc','Wu@SuperLoo.com','WWW');
--  ADD RATING ROWS
		 INSERT INTO RATING VALUES ('P01',10001,1,2,3,4,null,null,null);
		 INSERT INTO RATING VALUES ('P01',10002,4,3,2,1,null,null,null);
		 INSERT INTO RATING VALUES ('P01',10003,3,3,3,3,null,null,null);
		 INSERT INTO RATING VALUES ('P01',10004,4,4,4,4,null,null,null);

--  ADD AREA_OF_INTETEST ROWS
		 INSERT INTO AREA_OF_INTETEST VALUES ('I01','Physics');
		 INSERT INTO AREA_OF_INTETEST VALUES ('I02','geography');
		 INSERT INTO AREA_OF_INTETEST VALUES ('I03','history');
		 INSERT INTO AREA_OF_INTETEST VALUES ('I04','mathematics');
		 
--  ADD REVIEWER_OF_INTERESTS ROWS
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I01',10001);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I02',10002);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I03',10002);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I03',10003);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I01',10003);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I04',10003);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I03',10004);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I02',10005);
		 INSERT INTO REVIEWER_OF_INTERESTS VALUES('I01',10005);

--  CREATE SEQUENCE		 
	CREATE SEQUENCE SEQ_IS_CODE
	AS INT
    START WITH 10
    INCREMENT BY 1
    MAXVALUE 99999
	NO CACHE
	NO CYCLE;
		 
	INSERT INTO AREA_OF_INTETEST
	VALUES (NEXT VALUE FOR SEQ_IS_CODE,'high-energy physics');

-- CREATE INDEX
	CREATE INDEX IDX_P_CODE_SCH_ID
	ON CREDIT (P_CODE,S_ID);
		 
	CREATE INDEX IDX_PAPER_CODE_REVR_ID
	ON RATING (PAPER_CODE,REVR_ID);
		 
-- ADD/MODIFY columns
	UPDATE AREA_OF_INTETEST
	SET  IS_DESCRIPTION = 'Database'
	WHERE IS_CODE = 'I01';
		 
	UPDATE RATING
	SET TOTAL_RATING = (APPROPRIATENESS + CLARITY + METHODOLOGY + CONTRIBUTION )/4;

SELECT * FROM CREDIT
SELECT * FROM PAPER
SELECT * FROM SCHOLARS
SELECT * FROM RATING
SELECT * FROM REVIEWER
SELECT * FROM REVIEWER_OF_INTERESTS
SELECT * FROM AREA_OF_INTETEST

-- Develop at least 3 complex queries
--1) How mamy authors does each paper have?
SELECT P_CODE, COUNT(DISTINCT S_ID) AS NUMER_AUTHOR
FROM CREDIT
GROUP BY P_CODE

--2)List the paper code , paper title and all the names of the author.
SELECT P.PAPER_CODE,P.PAPER_TITLE,S.SCH_NAME
FROM PAPER p,CREDIT C,SCHOLARS S
WHERE P.PAPER_CODE=C.P_CODE AND C.S_ID=S.SCH_ID

--3)List the reviewers'id ,reviewers'name, recommandation and total rating for papers,and order the tatal rating desending?
SELECT RA.PAPER_CODE,RW.REVR_NAME, RA.TOTAL_RATING,RA.RECOMMENDATION
FROM REVIEWER RW,RATING RA
WHERE RW.REVR_ID=RA.REVR_ID
ORDER BY RA.TOTAL_RATING DESC

--4)Find all papers'code , papers'title and recieved date which don't have viewers?
SELECT P.PAPER_CODE,P.PAPER_TITLE,P.REC_DATE
FROM PAPER P
WHERE NOT EXISTS
	(SELECT R.REVR_ID
	FROM RATING R
	WHERE P.PAPER_CODE=R.PAPER_CODE)

--ADD 2 VIEWS
--VIEW 1
/* CREATE VIEW OF REVIEWERS  AND THEIR AREA OF INTEREST, 
INCLUDING  IS_CODE OF THE  AREA OF INTEREST, REVIEWER CODE */

CREATE VIEW IS_REV (IS_CODE, REVR_ID, CNT)
AS
SELECT R.IS_CODE, REV.REVR_ID, COUNT(*) AS CNT
FROM REVIEWER REV, REVIEWER_OF_INTERESTS R
WHERE REV.REVR_ID=R. REVR_ID
GROUP BY R.IS_CODE, REV.REVR_ID;

SELECT*FROM IS_REV;

--VIEW2
/* CREATE VIEW OF PAPER ABOUT SCHOLAR ID AND CREDIT
    AT P_CODE P03*/
CREATE VIEW P_CREDIT
AS 
SELECT P_CODE, CREDITS, S_ID
FROM CREDIT
WHERE P_CODE='P03';

SELECT * FROM P_CREDIT;

--ADD Procedure 1/2
  /*Create a procedure for adding scholars. Take the scholar's name, email, mailbox and affilation as parameters.
    Use email address to verify if the scholar already exists on the table. 
    If it already exists, it will not be added repeatedly, and a prompt message will be displayed. 
    If it does not exist, add record and show that the addition was successful.*/
GO
CREATE PROCEDURE PR_ADD_SCHO @EMAIL VARCHAR(50),@NAME VARCHAR(30),@ADRESS VARCHAR(255),@AFFILATION VARCHAR(255)
AS
BEGIN     
    IF (SELECT COUNT(*) FROM SCHOLARS WHERE SCH_EMAIL = @EMAIL) > 0
	   PRINT'This scholar already exists because the email address already exists.'
	ELSE
	   BEGIN
       INSERT INTO SCHOLARS VALUES (NEXT VALUE FOR SEQ_SCHOLARS_ID, @EMAIL , @NAME, @ADRESS, @AFFILATION )
       PRINT ' NEW RECORD HAS BEEN ADDED'
	   END
END;

EXEC PR_ADD_SCHO 'jianwen@vanier.com','jianwen','jianwen, Inc.','JJJ';
EXEC PR_ADD_SCHO 'Tom1998@vanier.com','TomLi','TomLi, Inc.','TTT';
SELECT * FROM SCHOLARS;

--ADD Procedure 2/2
  /*Create a procedure that allows editors to find out who is an expert in a particular field quickly.
    You can use this procedure to find out the information of INTERVIEWER
	by entering a keyword of a certain field as a parameter*/
GO
CREATE PROCEDURE PR_SELECT_INTETEST @IS_DESCRIPTION VARCHAR(255)
AS
BEGIN
SELECT * FROM REVIEWER
WHERE REVR_ID IN 
				(SELECT REVR_ID FROM REVIEWER_OF_INTERESTS
				 WHERE IS_CODE IN
				                 (SELECT IS_CODE FROM AREA_OF_INTETEST
								  WHERE IS_DESCRIPTION LIKE @IS_DESCRIPTION)
								 );				                
END;

EXEC PR_SELECT_INTETEST 'P1';
EXEC PR_SELECT_INTETEST 'geography';
EXEC PR_SELECT_INTETEST '%geo%';

-- 2 triggers
/* 1)Before making an overall decision, the number of reviewers for each research paper 
must be 2 or more, otherwise, a message has to be displayed for the editor to invite 
an additional reviewer to get an extra opinion before making a decision.*/

CREATE TRIGGER TRG_FEEDBACK_DETECTING ON PAPER
INSTEAD OF UPDATE
AS
BEGIN
 DECLARE @P_CODE VARCHAR(20)
 DECLARE @COUNT INT
 SELECT @COUNT = COUNT(*) 
				 FROM RATING
				 WHERE PAPER_CODE = @P_CODE
 IF @COUNT <= 1
	PRINT 'Please invite another scholar to join for review this paper'

 ELSE
      UPDATE PAPER
      SET PAPER_FEEDBACK = (SELECT (APPROPRIATENESS + CLARITY + METHODOLOGY + CONTRIBUTION)/4
													 FROM RATING
			                     WHERE PAPER_CODE = @P_CODE);
END;


/* 2)Get the feedback rating points from each reviewer on the paper. If the average scale 
for appropriateness, clarity, methodology, and contribution to the field that is given 
to the paper is more than 5-points, then the status of the paper has to be changed
to “accepted” and the date of acceptance is recorded. If the scale less than 5-points 
the status is changed to “rejected.”*/

CREATE TRIGGER TRG_RECOMMENDATION ON RATING
AFTER UPDATE
AS
BEGIN
 DECLARE @P_CODE VARCHAR(20)
 DECLARE @P_REVR_ID INT
 SELECT TOTAL_RATING 
 FROM RATING
 WHERE REVR_ID = @P_REVR_ID
 
 IF TOTAL_RATING <= 5
		  UPDATE PAPER
      SET RECOMMENDATION = 'reject'
			WHERE REVR_ID = @P_REVR_ID;
 ELSE
      UPDATE PAPER
      SET RECOMMENDATION = 'accepted', RATING_DATE = GETDATE()
			WHERE REVR_ID = @P_REVR_ID;
END;